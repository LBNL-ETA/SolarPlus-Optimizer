modbus:
    UNIT_ID: 0xf7
    byte_order: big
    word_order: little
    enable_logging: False
    #                          ### Modbus typ ###
    # This can be set to 'tcp' or 'serial' and determines the modbus method that
    # the driver will use.  The appropriate settings will be used below and the
    # irrelevant ones will be ignored
    modbus_type: serial
    #modbus_type: tcp
    #                          ### Serial Settings ###
    method: rtu
    stopbits: 1
    bytesize: 8
    # Parity can be N|E|O|M|S] where N: None, E: even, O: odd
    parity: E
    serial_port: /dev/ttyUSB0
    baudrate: 9600
    #                          ### Modbus TCP Settings ###
    ip: 127.0.0.1
    tcp_port: 5020
    #                          ### OFFSET Regitsers
    # This controls how much will be subtracted from all of the register addresses
    # Some device specs will list the register address as 1, but when being accessed
    # It will actually need to be sent addressed as 0.
    OFFSET_REGISTERS: 0
    #                          ### Target registers ###
    # These registers will be accessed when the get_data() function is called
    # the function will return a dictionary with the data for each register
    # Register names must be unique or data will be overwritten. The
    # write_registers() function will also use the register names defined here.
    coil_registers: {}
    discrete_registers: {}
    input_registers: {}
    holding_registers: {
    # Each dictionary entry:
    # register_name: [register_type, register_address, RW]
    # W = write, R = Read
    # The last parameter is optional and prevents Write only registers from being
    # read by get_data() method. If it is not present, R (Read-only) is assumed.
                        # commented out registers would not read!
                        # Compressor data
                        compressor_working_hours: [0x2896,16int,R],
                        clear_memo_compressor_hours: [0x0470,16int,W], #seems to be write only
                        # Application commands
                        buzzer_control: [0x402, 16int,W],
                        defrost_control: [0x28B0, 16int,W], # 12 to stop defrost, 13 to start defrost
                        start_resistors: [0x475, 16int,W],
                        # Status Read/Write
                        on_standby_status: [0x0501,16int,RW],
                        light_status: [0x0502,16int,RW],
                        aux_output_status: [0x0503,16int,RW],
                        next_defrost_counter: [0x2886,16int,R],
                        # Packed Status
                        digital_input_output_status: [0x0551,16uint,R],
                        # Probes
                        cab_probe: [0x552,16int,R],
                        evap_probe: [0x553,16int,R],
                        aux_probe: [0x554,16int,R],
                        # Alarms
                        alarm_status: [0x0555,16uint,R], # need to mask this
                        # Regulators
                        regulator_flag1: [0x0556,16uint,R],
                        regulator_flag2: [0x0557,16uint,R],
                        active_set_point: [0x0558,16int,R],
                        time_until_defrost: [0x0559,16int,R],
                        current_defrost_counter: [0x055A,16int,R],
                        compressor_delay: [0x055B,16int,R],
                        num_alarms_in_history: [0x055C,16int,R], #Number of HAACP alarm in historial
                        # Digital output flags
                        digital_output_flags: [0x28C1,16uint,R], # need to mask this
                        # Parameters
                        SP: [0x601,16int,RW],
                        CA1: [0x603,16int,RW],
                        CA2: [0x604,16int,RW],
                        CA3: [0x605,16int,RW],
                        p0: [0x606,16int,RW],
                        p1: [0x607,16int,RW],
                        p2: [0x608,16int,RW],
                        p3: [0x609,16int,RW],
                        p4: [0x60A,16int,RW],
                        p5: [0x60B,16int,RW],
                        p6: [0x60C,16int,RW],
                        r0: [0x60E,16int,RW],
                        r1: [0x60F,16int,RW],
                        r2: [0x610,16int,RW],
                        r3: [0x611,16int,RW],
                        r4: [0x612,16int,RW],
                        c0: [0x613,16int,RW],
                        c1: [0x614,16int,RW],
                        c2: [0x615,16int,RW],
                        c3: [0x616,16int,RW],
                        c4: [0x617,16int,RW],
                        c5: [0x618,16int,RW],
                        c6: [0x619,16int,RW],
                        c7: [0x61A,16int,RW],
                        c8: [0x61B,16int,RW],
                        c9: [0x61C,16int,RW],
                        c10: [0x61D,16int,RW],
                        d0: [0x61E,16int,RW],
                        d1: [0x61F,16int,RW],
                        d2: [0x620,16int,RW],
                        d3: [0x621,16int,RW],
                        d4: [0x622,16int,RW],
                        d5: [0x623,16int,RW],
                        d6: [0x624,16int,RW],
                        d7: [0x625,16int,RW],
                        d8: [0x626,16int,RW],
                        d9: [0x627,16int,RW],
                        dA: [0x628,16int,RW],
                        A0: [0x629,16int,RW],
                        A1: [0x62A,16int,RW],
                        A2: [0x62B,16int,RW],
                        A3: [0x62C,16int,RW],
                        A4: [0x62D,16int,RW],
                        A5: [0x62E,16int,RW],
                        A6: [0x62F,16int,RW],
                        A7: [0x630,16int,RW],
                        A8: [0x631,16int,RW],
                        A9: [0x632,16int,RW],
                        AA: [0x633,16int,RW],
                        F0: [0x634,16int,RW],
                        F1: [0x635,16int,RW],
                        F2: [0x636,16int,RW],
                        F3: [0x637,16int,RW],
                        i0: [0x638,16int,RW],
                        i1: [0x639,16int,RW],
                        i2: [0x63A,16int,RW],
                        i3: [0x63B,16int,RW],
                        i4: [0x63C,16int,RW],
                        i5: [0x63D,16int,RW],
                        i6: [0x63E,16int,RW],
                        i7: [0x63F,16int,RW],
                        i8: [0x640,16int,RW],
                        i9: [0x641,16int,RW],
                        u1: [0x642,16int,RW],
                        u2: [0x643,16int,RW],
                        u3: [0x644,16int,RW],
                        u4: [0x645,16int,RW],
                        u5: [0x646,16int,RW],
                        u6: [0x647,16int,RW],
                        u7: [0x648,16int,RW],
                        u8: [0x649,16int,RW],
                        HE1: [0x64A,16int,RW],
                        HE2: [0x64B,16int,RW],
                        hd1: [0x64C,16int,RW],
                        hd2: [0x64D,16int,RW],
                        hd3: [0x64E,16int,RW],
                        hd4: [0x64F,16int,RW],
                        hd5: [0x650,16int,RW],
                        hd6: [0x651,16int,RW],
                        #LA: [0x652,16int,RW],
                        #LB: [0x653,16int,RW],
                        LP: [0x654,16int,RW],
                        KBD: [0x655,16int,RW],
                        # Info
                        driver_identifier_A: [0xff02,16int,R],
                        driver_identifier_B: [0xff03,16int,R],
                        firmware_ID: [0xff08,16int,R],
                        firmware_variation: [0xff09,16int,R]
    }
